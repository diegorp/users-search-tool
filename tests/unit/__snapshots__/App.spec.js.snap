// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App.vue should render the component 1`] = `
VueWrapper {
  "__app": Object {
    "_component": Object {
      "name": "VTU_ROOT",
      "render": [Function],
    },
    "_container": <div
      data-v-app=""
    >
      
      <search-box-stub />
      <users-list-stub
        users=""
      />
      <!--v-if-->
      
    </div>,
    "_context": Object {
      "app": [Circular],
      "components": Object {
        "transition": Object {
          "name": "transition",
        },
        "transition-group": Object {
          "name": "transition-group",
        },
      },
      "config": Object {
        "compilerOptions": Object {},
        "errorHandler": undefined,
        "globalProperties": Object {},
        "isNativeTag": [Function],
        "optionMergeStrategies": Object {},
        "performance": false,
        "warnHandler": undefined,
      },
      "directives": Object {},
      "emitsCache": WeakMap {},
      "mixins": Array [
        Object {
          "beforeCreate": [Function],
        },
      ],
      "optionsCache": WeakMap {},
      "propsCache": WeakMap {},
      "provides": Object {},
      "reload": [Function],
    },
    "_instance": Object {
      "a": null,
      "accessCache": Object {},
      "appContext": Object {
        "app": [Circular],
        "components": Object {
          "transition": Object {
            "name": "transition",
          },
          "transition-group": Object {
            "name": "transition-group",
          },
        },
        "config": Object {
          "compilerOptions": Object {},
          "errorHandler": undefined,
          "globalProperties": Object {},
          "isNativeTag": [Function],
          "optionMergeStrategies": Object {},
          "performance": false,
          "warnHandler": undefined,
        },
        "directives": Object {},
        "emitsCache": WeakMap {},
        "mixins": Array [
          Object {
            "beforeCreate": [Function],
          },
        ],
        "optionsCache": WeakMap {},
        "propsCache": WeakMap {},
        "provides": Object {},
        "reload": [Function],
      },
      "asyncDep": null,
      "asyncResolved": false,
      "attrs": Object {},
      "bc": null,
      "bm": null,
      "bu": null,
      "bum": null,
      "c": null,
      "components": null,
      "ctx": Object {},
      "da": null,
      "data": Object {},
      "directives": null,
      "ec": null,
      "effect": ReactiveEffect {
        "active": true,
        "allowRecurse": true,
        "deps": Array [
          Set {
            [Circular],
          },
          Set {
            [Circular],
          },
        ],
        "fn": [Function],
        "onTrack": undefined,
        "onTrigger": undefined,
        "parent": undefined,
        "scheduler": [Function],
      },
      "emit": [Function],
      "emitsOptions": null,
      "emitted": null,
      "exposeProxy": null,
      "exposed": null,
      "inheritAttrs": undefined,
      "isDeactivated": false,
      "isMounted": true,
      "isUnmounted": false,
      "m": null,
      "next": null,
      "parent": null,
      "props": Object {},
      "propsDefaults": Object {},
      "propsOptions": Array [
        Object {},
        Array [],
      ],
      "provides": Object {},
      "proxy": Object {},
      "refs": Object {
        "VTU_COMPONENT": Object {
          "apollo": Object {
            "client": ApolloClient {
              "__actionHookForDevTools": [MockFunction undefined],
              "__requestRaw": [MockFunction undefined],
              "addResolvers": [MockFunction undefined],
              "clearStore": [MockFunction undefined],
              "constructor": [MockFunction undefined],
              "extract": [MockFunction undefined],
              "getObservableQueries": [MockFunction undefined],
              "getResolvers": [MockFunction undefined],
              "mutate": [MockFunction undefined],
              "onClearStore": [MockFunction undefined],
              "onResetStore": [MockFunction undefined],
              "query": [MockFunction undefined],
              "reFetchObservableQueries": [MockFunction undefined],
              "readFragment": [MockFunction undefined],
              "readQuery": [MockFunction undefined],
              "refetchQueries": [MockFunction undefined],
              "resetStore": [MockFunction undefined],
              "restore": [MockFunction undefined],
              "setLink": [MockFunction undefined],
              "setLocalStateFragmentMatcher": [MockFunction undefined],
              "setResolvers": [MockFunction undefined],
              "stop": [MockFunction undefined],
              "subscribe": [MockFunction undefined],
              "watchQuery": [MockFunction undefined],
              "writeFragment": [MockFunction undefined],
              "writeQuery": [MockFunction undefined],
            },
            "limit": 5,
            "startPage": 0,
            "usersQuery": Object {
              "definitions": Array [
                Object {
                  "directives": Array [],
                  "kind": "OperationDefinition",
                  "name": Object {
                    "kind": "Name",
                    "value": "Users",
                  },
                  "operation": "query",
                  "selectionSet": Object {
                    "kind": "SelectionSet",
                    "selections": Array [
                      Object {
                        "alias": undefined,
                        "arguments": Array [
                          Object {
                            "kind": "Argument",
                            "name": Object {
                              "kind": "Name",
                              "value": "options",
                            },
                            "value": Object {
                              "fields": Array [
                                Object {
                                  "kind": "ObjectField",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "search",
                                  },
                                  "value": Object {
                                    "fields": Array [
                                      Object {
                                        "kind": "ObjectField",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "q",
                                        },
                                        "value": Object {
                                          "kind": "Variable",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "q",
                                          },
                                        },
                                      },
                                    ],
                                    "kind": "ObjectValue",
                                  },
                                },
                                Object {
                                  "kind": "ObjectField",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "slice",
                                  },
                                  "value": Object {
                                    "fields": Array [
                                      Object {
                                        "kind": "ObjectField",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "start",
                                        },
                                        "value": Object {
                                          "kind": "Variable",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "page",
                                          },
                                        },
                                      },
                                      Object {
                                        "kind": "ObjectField",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "limit",
                                        },
                                        "value": Object {
                                          "kind": "Variable",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "limit",
                                          },
                                        },
                                      },
                                    ],
                                    "kind": "ObjectValue",
                                  },
                                },
                              ],
                              "kind": "ObjectValue",
                            },
                          },
                        ],
                        "directives": Array [],
                        "kind": "Field",
                        "name": Object {
                          "kind": "Name",
                          "value": "users",
                        },
                        "selectionSet": Object {
                          "kind": "SelectionSet",
                          "selections": Array [
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "data",
                              },
                              "selectionSet": Object {
                                "kind": "SelectionSet",
                                "selections": Array [
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "id",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "name",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "email",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "phone",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "company",
                                    },
                                    "selectionSet": Object {
                                      "kind": "SelectionSet",
                                      "selections": Array [
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "name",
                                          },
                                          "selectionSet": undefined,
                                        },
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "catchPhrase",
                                          },
                                          "selectionSet": undefined,
                                        },
                                      ],
                                    },
                                  },
                                ],
                              },
                            },
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "meta",
                              },
                              "selectionSet": Object {
                                "kind": "SelectionSet",
                                "selections": Array [
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "totalCount",
                                    },
                                    "selectionSet": undefined,
                                  },
                                ],
                              },
                            },
                          ],
                        },
                      },
                    ],
                  },
                  "variableDefinitions": Array [
                    Object {
                      "defaultValue": undefined,
                      "directives": Array [],
                      "kind": "VariableDefinition",
                      "type": Object {
                        "kind": "NamedType",
                        "name": Object {
                          "kind": "Name",
                          "value": "String",
                        },
                      },
                      "variable": Object {
                        "kind": "Variable",
                        "name": Object {
                          "kind": "Name",
                          "value": "q",
                        },
                      },
                    },
                    Object {
                      "defaultValue": undefined,
                      "directives": Array [],
                      "kind": "VariableDefinition",
                      "type": Object {
                        "kind": "NamedType",
                        "name": Object {
                          "kind": "Name",
                          "value": "Int",
                        },
                      },
                      "variable": Object {
                        "kind": "Variable",
                        "name": Object {
                          "kind": "Name",
                          "value": "page",
                        },
                      },
                    },
                    Object {
                      "defaultValue": undefined,
                      "directives": Array [],
                      "kind": "VariableDefinition",
                      "type": Object {
                        "kind": "NamedType",
                        "name": Object {
                          "kind": "Name",
                          "value": "Int",
                        },
                      },
                      "variable": Object {
                        "kind": "Variable",
                        "name": Object {
                          "kind": "Name",
                          "value": "limit",
                        },
                      },
                    },
                  ],
                },
              ],
              "kind": "Document",
              "loc": Object {
                "end": 327,
                "start": 0,
              },
            },
          },
          "fetchNextUser": [Function],
          "fetchUsers": [Function],
          "hasOwnProperty": [Function],
          "isLoading": false,
          "search": [Function],
          "textToSearch": "",
          "users": Array [],
        },
      },
      "render": [Function],
      "renderCache": Array [],
      "root": [Circular],
      "rtc": null,
      "rtg": null,
      "scope": EffectScope {
        "active": true,
        "cleanups": Array [],
        "effects": Array [
          ReactiveEffect {
            "active": true,
            "allowRecurse": true,
            "deps": Array [
              Set {
                [Circular],
              },
              Set {
                [Circular],
              },
            ],
            "fn": [Function],
            "onTrack": undefined,
            "onTrigger": undefined,
            "parent": undefined,
            "scheduler": [Function],
          },
        ],
      },
      "setupContext": null,
      "setupState": Object {},
      "slots": Object {},
      "sp": null,
      "subTree": Object {
        "__v_isVNode": true,
        "__v_skip": true,
        "anchor": null,
        "appContext": null,
        "children": null,
        "component": Object {
          "a": null,
          "accessCache": Object {
            "@@__IMMUTABLE_ITERABLE__@@": 0,
            "@@__IMMUTABLE_RECORD__@@": 0,
            "_isMockFunction": 0,
            "apollo": 2,
            "constructor": 0,
            "fetchNextUser": 4,
            "fetchUsers": 4,
            "hasOwnProperty": 4,
            "isLoading": 2,
            "isVueInstance": 0,
            "search": 4,
            "textToSearch": 2,
            "toJSON": 0,
            "users": 2,
            Symbol(Symbol.toStringTag): 0,
          },
          "appContext": Object {
            "app": [Circular],
            "components": Object {
              "transition": Object {
                "name": "transition",
              },
              "transition-group": Object {
                "name": "transition-group",
              },
            },
            "config": Object {
              "compilerOptions": Object {},
              "errorHandler": undefined,
              "globalProperties": Object {},
              "isNativeTag": [Function],
              "optionMergeStrategies": Object {},
              "performance": false,
              "warnHandler": undefined,
            },
            "directives": Object {},
            "emitsCache": WeakMap {},
            "mixins": Array [
              Object {
                "beforeCreate": [Function],
              },
            ],
            "optionsCache": WeakMap {},
            "propsCache": WeakMap {},
            "provides": Object {},
            "reload": [Function],
          },
          "asyncDep": null,
          "asyncResolved": false,
          "attrs": Object {},
          "bc": null,
          "bm": null,
          "bu": null,
          "bum": null,
          "c": null,
          "components": Object {
            "SearchBox": Object {
              "data": [Function],
              "methods": Object {
                "search": [Function],
              },
              "name": "SearchBox",
              "render": [Function],
            },
            "UsersList": Object {
              "components": Object {
                "UserInfo": Object {
                  "name": "UserInfo",
                  "props": Object {
                    "user": [Function],
                  },
                  "render": [Function],
                },
              },
              "name": "UsersList",
              "props": Object {
                "users": [Function],
              },
              "render": [Function],
            },
          },
          "ctx": Object {
            "apollo": Object {
              "client": ApolloClient {
                "__actionHookForDevTools": [MockFunction undefined],
                "__requestRaw": [MockFunction undefined],
                "addResolvers": [MockFunction undefined],
                "clearStore": [MockFunction undefined],
                "constructor": [MockFunction undefined],
                "extract": [MockFunction undefined],
                "getObservableQueries": [MockFunction undefined],
                "getResolvers": [MockFunction undefined],
                "mutate": [MockFunction undefined],
                "onClearStore": [MockFunction undefined],
                "onResetStore": [MockFunction undefined],
                "query": [MockFunction undefined],
                "reFetchObservableQueries": [MockFunction undefined],
                "readFragment": [MockFunction undefined],
                "readQuery": [MockFunction undefined],
                "refetchQueries": [MockFunction undefined],
                "resetStore": [MockFunction undefined],
                "restore": [MockFunction undefined],
                "setLink": [MockFunction undefined],
                "setLocalStateFragmentMatcher": [MockFunction undefined],
                "setResolvers": [MockFunction undefined],
                "stop": [MockFunction undefined],
                "subscribe": [MockFunction undefined],
                "watchQuery": [MockFunction undefined],
                "writeFragment": [MockFunction undefined],
                "writeQuery": [MockFunction undefined],
              },
              "limit": 5,
              "startPage": 0,
              "usersQuery": Object {
                "definitions": Array [
                  Object {
                    "directives": Array [],
                    "kind": "OperationDefinition",
                    "name": Object {
                      "kind": "Name",
                      "value": "Users",
                    },
                    "operation": "query",
                    "selectionSet": Object {
                      "kind": "SelectionSet",
                      "selections": Array [
                        Object {
                          "alias": undefined,
                          "arguments": Array [
                            Object {
                              "kind": "Argument",
                              "name": Object {
                                "kind": "Name",
                                "value": "options",
                              },
                              "value": Object {
                                "fields": Array [
                                  Object {
                                    "kind": "ObjectField",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "search",
                                    },
                                    "value": Object {
                                      "fields": Array [
                                        Object {
                                          "kind": "ObjectField",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "q",
                                          },
                                          "value": Object {
                                            "kind": "Variable",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "q",
                                            },
                                          },
                                        },
                                      ],
                                      "kind": "ObjectValue",
                                    },
                                  },
                                  Object {
                                    "kind": "ObjectField",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "slice",
                                    },
                                    "value": Object {
                                      "fields": Array [
                                        Object {
                                          "kind": "ObjectField",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "start",
                                          },
                                          "value": Object {
                                            "kind": "Variable",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "page",
                                            },
                                          },
                                        },
                                        Object {
                                          "kind": "ObjectField",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "limit",
                                          },
                                          "value": Object {
                                            "kind": "Variable",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "limit",
                                            },
                                          },
                                        },
                                      ],
                                      "kind": "ObjectValue",
                                    },
                                  },
                                ],
                                "kind": "ObjectValue",
                              },
                            },
                          ],
                          "directives": Array [],
                          "kind": "Field",
                          "name": Object {
                            "kind": "Name",
                            "value": "users",
                          },
                          "selectionSet": Object {
                            "kind": "SelectionSet",
                            "selections": Array [
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "data",
                                },
                                "selectionSet": Object {
                                  "kind": "SelectionSet",
                                  "selections": Array [
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "id",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "name",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "email",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "phone",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "company",
                                      },
                                      "selectionSet": Object {
                                        "kind": "SelectionSet",
                                        "selections": Array [
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "name",
                                            },
                                            "selectionSet": undefined,
                                          },
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "catchPhrase",
                                            },
                                            "selectionSet": undefined,
                                          },
                                        ],
                                      },
                                    },
                                  ],
                                },
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "meta",
                                },
                                "selectionSet": Object {
                                  "kind": "SelectionSet",
                                  "selections": Array [
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "totalCount",
                                      },
                                      "selectionSet": undefined,
                                    },
                                  ],
                                },
                              },
                            ],
                          },
                        },
                      ],
                    },
                    "variableDefinitions": Array [
                      Object {
                        "defaultValue": undefined,
                        "directives": Array [],
                        "kind": "VariableDefinition",
                        "type": Object {
                          "kind": "NamedType",
                          "name": Object {
                            "kind": "Name",
                            "value": "String",
                          },
                        },
                        "variable": Object {
                          "kind": "Variable",
                          "name": Object {
                            "kind": "Name",
                            "value": "q",
                          },
                        },
                      },
                      Object {
                        "defaultValue": undefined,
                        "directives": Array [],
                        "kind": "VariableDefinition",
                        "type": Object {
                          "kind": "NamedType",
                          "name": Object {
                            "kind": "Name",
                            "value": "Int",
                          },
                        },
                        "variable": Object {
                          "kind": "Variable",
                          "name": Object {
                            "kind": "Name",
                            "value": "page",
                          },
                        },
                      },
                      Object {
                        "defaultValue": undefined,
                        "directives": Array [],
                        "kind": "VariableDefinition",
                        "type": Object {
                          "kind": "NamedType",
                          "name": Object {
                            "kind": "Name",
                            "value": "Int",
                          },
                        },
                        "variable": Object {
                          "kind": "Variable",
                          "name": Object {
                            "kind": "Name",
                            "value": "limit",
                          },
                        },
                      },
                    ],
                  },
                ],
                "kind": "Document",
                "loc": Object {
                  "end": 327,
                  "start": 0,
                },
              },
            },
            "fetchNextUser": [Function],
            "fetchUsers": [Function],
            "hasOwnProperty": [Function],
            "isLoading": false,
            "search": [Function],
            "textToSearch": "",
            "users": Array [],
          },
          "da": null,
          "data": Object {
            "apollo": Object {
              "client": ApolloClient {
                "__actionHookForDevTools": [MockFunction undefined],
                "__requestRaw": [MockFunction undefined],
                "addResolvers": [MockFunction undefined],
                "clearStore": [MockFunction undefined],
                "constructor": [MockFunction undefined],
                "extract": [MockFunction undefined],
                "getObservableQueries": [MockFunction undefined],
                "getResolvers": [MockFunction undefined],
                "mutate": [MockFunction undefined],
                "onClearStore": [MockFunction undefined],
                "onResetStore": [MockFunction undefined],
                "query": [MockFunction undefined],
                "reFetchObservableQueries": [MockFunction undefined],
                "readFragment": [MockFunction undefined],
                "readQuery": [MockFunction undefined],
                "refetchQueries": [MockFunction undefined],
                "resetStore": [MockFunction undefined],
                "restore": [MockFunction undefined],
                "setLink": [MockFunction undefined],
                "setLocalStateFragmentMatcher": [MockFunction undefined],
                "setResolvers": [MockFunction undefined],
                "stop": [MockFunction undefined],
                "subscribe": [MockFunction undefined],
                "watchQuery": [MockFunction undefined],
                "writeFragment": [MockFunction undefined],
                "writeQuery": [MockFunction undefined],
              },
              "limit": 5,
              "startPage": 0,
              "usersQuery": Object {
                "definitions": Array [
                  Object {
                    "directives": Array [],
                    "kind": "OperationDefinition",
                    "name": Object {
                      "kind": "Name",
                      "value": "Users",
                    },
                    "operation": "query",
                    "selectionSet": Object {
                      "kind": "SelectionSet",
                      "selections": Array [
                        Object {
                          "alias": undefined,
                          "arguments": Array [
                            Object {
                              "kind": "Argument",
                              "name": Object {
                                "kind": "Name",
                                "value": "options",
                              },
                              "value": Object {
                                "fields": Array [
                                  Object {
                                    "kind": "ObjectField",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "search",
                                    },
                                    "value": Object {
                                      "fields": Array [
                                        Object {
                                          "kind": "ObjectField",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "q",
                                          },
                                          "value": Object {
                                            "kind": "Variable",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "q",
                                            },
                                          },
                                        },
                                      ],
                                      "kind": "ObjectValue",
                                    },
                                  },
                                  Object {
                                    "kind": "ObjectField",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "slice",
                                    },
                                    "value": Object {
                                      "fields": Array [
                                        Object {
                                          "kind": "ObjectField",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "start",
                                          },
                                          "value": Object {
                                            "kind": "Variable",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "page",
                                            },
                                          },
                                        },
                                        Object {
                                          "kind": "ObjectField",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "limit",
                                          },
                                          "value": Object {
                                            "kind": "Variable",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "limit",
                                            },
                                          },
                                        },
                                      ],
                                      "kind": "ObjectValue",
                                    },
                                  },
                                ],
                                "kind": "ObjectValue",
                              },
                            },
                          ],
                          "directives": Array [],
                          "kind": "Field",
                          "name": Object {
                            "kind": "Name",
                            "value": "users",
                          },
                          "selectionSet": Object {
                            "kind": "SelectionSet",
                            "selections": Array [
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "data",
                                },
                                "selectionSet": Object {
                                  "kind": "SelectionSet",
                                  "selections": Array [
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "id",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "name",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "email",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "phone",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "company",
                                      },
                                      "selectionSet": Object {
                                        "kind": "SelectionSet",
                                        "selections": Array [
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "name",
                                            },
                                            "selectionSet": undefined,
                                          },
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "catchPhrase",
                                            },
                                            "selectionSet": undefined,
                                          },
                                        ],
                                      },
                                    },
                                  ],
                                },
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "meta",
                                },
                                "selectionSet": Object {
                                  "kind": "SelectionSet",
                                  "selections": Array [
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "totalCount",
                                      },
                                      "selectionSet": undefined,
                                    },
                                  ],
                                },
                              },
                            ],
                          },
                        },
                      ],
                    },
                    "variableDefinitions": Array [
                      Object {
                        "defaultValue": undefined,
                        "directives": Array [],
                        "kind": "VariableDefinition",
                        "type": Object {
                          "kind": "NamedType",
                          "name": Object {
                            "kind": "Name",
                            "value": "String",
                          },
                        },
                        "variable": Object {
                          "kind": "Variable",
                          "name": Object {
                            "kind": "Name",
                            "value": "q",
                          },
                        },
                      },
                      Object {
                        "defaultValue": undefined,
                        "directives": Array [],
                        "kind": "VariableDefinition",
                        "type": Object {
                          "kind": "NamedType",
                          "name": Object {
                            "kind": "Name",
                            "value": "Int",
                          },
                        },
                        "variable": Object {
                          "kind": "Variable",
                          "name": Object {
                            "kind": "Name",
                            "value": "page",
                          },
                        },
                      },
                      Object {
                        "defaultValue": undefined,
                        "directives": Array [],
                        "kind": "VariableDefinition",
                        "type": Object {
                          "kind": "NamedType",
                          "name": Object {
                            "kind": "Name",
                            "value": "Int",
                          },
                        },
                        "variable": Object {
                          "kind": "Variable",
                          "name": Object {
                            "kind": "Name",
                            "value": "limit",
                          },
                        },
                      },
                    ],
                  },
                ],
                "kind": "Document",
                "loc": Object {
                  "end": 327,
                  "start": 0,
                },
              },
            },
            "isLoading": false,
            "textToSearch": "",
            "users": Array [],
          },
          "directives": null,
          "ec": null,
          "effect": ReactiveEffect {
            "active": true,
            "allowRecurse": true,
            "deps": Array [
              Set {
                [Circular],
              },
              Set {
                [Circular],
              },
            ],
            "fn": [Function],
            "onTrack": undefined,
            "onTrigger": undefined,
            "parent": undefined,
            "scheduler": [Function],
          },
          "emit": [Function],
          "emitsOptions": null,
          "emitted": null,
          "exposeProxy": null,
          "exposed": null,
          "inheritAttrs": undefined,
          "isDeactivated": false,
          "isMounted": true,
          "isUnmounted": false,
          "m": Array [
            [Function],
          ],
          "next": null,
          "parent": [Circular],
          "props": Object {},
          "propsDefaults": Object {},
          "propsOptions": Array [
            Object {},
            Array [],
          ],
          "provides": Object {},
          "proxy": Object {
            "apollo": Object {
              "client": ApolloClient {
                "__actionHookForDevTools": [MockFunction undefined],
                "__requestRaw": [MockFunction undefined],
                "addResolvers": [MockFunction undefined],
                "clearStore": [MockFunction undefined],
                "constructor": [MockFunction undefined],
                "extract": [MockFunction undefined],
                "getObservableQueries": [MockFunction undefined],
                "getResolvers": [MockFunction undefined],
                "mutate": [MockFunction undefined],
                "onClearStore": [MockFunction undefined],
                "onResetStore": [MockFunction undefined],
                "query": [MockFunction undefined],
                "reFetchObservableQueries": [MockFunction undefined],
                "readFragment": [MockFunction undefined],
                "readQuery": [MockFunction undefined],
                "refetchQueries": [MockFunction undefined],
                "resetStore": [MockFunction undefined],
                "restore": [MockFunction undefined],
                "setLink": [MockFunction undefined],
                "setLocalStateFragmentMatcher": [MockFunction undefined],
                "setResolvers": [MockFunction undefined],
                "stop": [MockFunction undefined],
                "subscribe": [MockFunction undefined],
                "watchQuery": [MockFunction undefined],
                "writeFragment": [MockFunction undefined],
                "writeQuery": [MockFunction undefined],
              },
              "limit": 5,
              "startPage": 0,
              "usersQuery": Object {
                "definitions": Array [
                  Object {
                    "directives": Array [],
                    "kind": "OperationDefinition",
                    "name": Object {
                      "kind": "Name",
                      "value": "Users",
                    },
                    "operation": "query",
                    "selectionSet": Object {
                      "kind": "SelectionSet",
                      "selections": Array [
                        Object {
                          "alias": undefined,
                          "arguments": Array [
                            Object {
                              "kind": "Argument",
                              "name": Object {
                                "kind": "Name",
                                "value": "options",
                              },
                              "value": Object {
                                "fields": Array [
                                  Object {
                                    "kind": "ObjectField",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "search",
                                    },
                                    "value": Object {
                                      "fields": Array [
                                        Object {
                                          "kind": "ObjectField",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "q",
                                          },
                                          "value": Object {
                                            "kind": "Variable",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "q",
                                            },
                                          },
                                        },
                                      ],
                                      "kind": "ObjectValue",
                                    },
                                  },
                                  Object {
                                    "kind": "ObjectField",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "slice",
                                    },
                                    "value": Object {
                                      "fields": Array [
                                        Object {
                                          "kind": "ObjectField",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "start",
                                          },
                                          "value": Object {
                                            "kind": "Variable",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "page",
                                            },
                                          },
                                        },
                                        Object {
                                          "kind": "ObjectField",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "limit",
                                          },
                                          "value": Object {
                                            "kind": "Variable",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "limit",
                                            },
                                          },
                                        },
                                      ],
                                      "kind": "ObjectValue",
                                    },
                                  },
                                ],
                                "kind": "ObjectValue",
                              },
                            },
                          ],
                          "directives": Array [],
                          "kind": "Field",
                          "name": Object {
                            "kind": "Name",
                            "value": "users",
                          },
                          "selectionSet": Object {
                            "kind": "SelectionSet",
                            "selections": Array [
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "data",
                                },
                                "selectionSet": Object {
                                  "kind": "SelectionSet",
                                  "selections": Array [
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "id",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "name",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "email",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "phone",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "company",
                                      },
                                      "selectionSet": Object {
                                        "kind": "SelectionSet",
                                        "selections": Array [
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "name",
                                            },
                                            "selectionSet": undefined,
                                          },
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "catchPhrase",
                                            },
                                            "selectionSet": undefined,
                                          },
                                        ],
                                      },
                                    },
                                  ],
                                },
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "meta",
                                },
                                "selectionSet": Object {
                                  "kind": "SelectionSet",
                                  "selections": Array [
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "totalCount",
                                      },
                                      "selectionSet": undefined,
                                    },
                                  ],
                                },
                              },
                            ],
                          },
                        },
                      ],
                    },
                    "variableDefinitions": Array [
                      Object {
                        "defaultValue": undefined,
                        "directives": Array [],
                        "kind": "VariableDefinition",
                        "type": Object {
                          "kind": "NamedType",
                          "name": Object {
                            "kind": "Name",
                            "value": "String",
                          },
                        },
                        "variable": Object {
                          "kind": "Variable",
                          "name": Object {
                            "kind": "Name",
                            "value": "q",
                          },
                        },
                      },
                      Object {
                        "defaultValue": undefined,
                        "directives": Array [],
                        "kind": "VariableDefinition",
                        "type": Object {
                          "kind": "NamedType",
                          "name": Object {
                            "kind": "Name",
                            "value": "Int",
                          },
                        },
                        "variable": Object {
                          "kind": "Variable",
                          "name": Object {
                            "kind": "Name",
                            "value": "page",
                          },
                        },
                      },
                      Object {
                        "defaultValue": undefined,
                        "directives": Array [],
                        "kind": "VariableDefinition",
                        "type": Object {
                          "kind": "NamedType",
                          "name": Object {
                            "kind": "Name",
                            "value": "Int",
                          },
                        },
                        "variable": Object {
                          "kind": "Variable",
                          "name": Object {
                            "kind": "Name",
                            "value": "limit",
                          },
                        },
                      },
                    ],
                  },
                ],
                "kind": "Document",
                "loc": Object {
                  "end": 327,
                  "start": 0,
                },
              },
            },
            "fetchNextUser": [Function],
            "fetchUsers": [Function],
            "hasOwnProperty": [Function],
            "isLoading": false,
            "search": [Function],
            "textToSearch": "",
            "users": Array [],
          },
          "refs": Object {},
          "render": [Function],
          "renderCache": Array [],
          "root": [Circular],
          "rtc": null,
          "rtg": null,
          "scope": EffectScope {
            "active": true,
            "cleanups": Array [],
            "effects": Array [
              ReactiveEffect {
                "active": true,
                "allowRecurse": true,
                "deps": Array [
                  Set {
                    [Circular],
                  },
                  Set {
                    [Circular],
                  },
                ],
                "fn": [Function],
                "onTrack": undefined,
                "onTrigger": undefined,
                "parent": undefined,
                "scheduler": [Function],
              },
            ],
          },
          "setupContext": null,
          "setupState": Object {},
          "slots": Object {},
          "sp": null,
          "subTree": Object {
            "__v_isVNode": true,
            "__v_skip": true,
            "anchor": ,
            "appContext": null,
            "children": Array [
              Object {
                "__v_isVNode": true,
                "__v_skip": true,
                "anchor": null,
                "appContext": null,
                "children": null,
                "component": Object {
                  "a": null,
                  "accessCache": Object {},
                  "appContext": Object {
                    "app": [Circular],
                    "components": Object {
                      "transition": Object {
                        "name": "transition",
                      },
                      "transition-group": Object {
                        "name": "transition-group",
                      },
                    },
                    "config": Object {
                      "compilerOptions": Object {},
                      "errorHandler": undefined,
                      "globalProperties": Object {},
                      "isNativeTag": [Function],
                      "optionMergeStrategies": Object {},
                      "performance": false,
                      "warnHandler": undefined,
                    },
                    "directives": Object {},
                    "emitsCache": WeakMap {},
                    "mixins": Array [
                      Object {
                        "beforeCreate": [Function],
                      },
                    ],
                    "optionsCache": WeakMap {},
                    "propsCache": WeakMap {},
                    "provides": Object {},
                    "reload": [Function],
                  },
                  "asyncDep": null,
                  "asyncResolved": false,
                  "attrs": Object {
                    "onSearch": [Function],
                  },
                  "bc": null,
                  "bm": null,
                  "bu": null,
                  "bum": null,
                  "c": null,
                  "components": null,
                  "ctx": Object {},
                  "da": null,
                  "data": Object {},
                  "directives": null,
                  "ec": null,
                  "effect": ReactiveEffect {
                    "active": true,
                    "allowRecurse": true,
                    "deps": Array [
                      Set {
                        [Circular],
                      },
                    ],
                    "fn": [Function],
                    "onTrack": undefined,
                    "onTrigger": undefined,
                    "parent": undefined,
                    "scheduler": [Function],
                  },
                  "emit": [Function],
                  "emitsOptions": null,
                  "emitted": null,
                  "exposeProxy": null,
                  "exposed": null,
                  "inheritAttrs": undefined,
                  "isDeactivated": false,
                  "isMounted": true,
                  "isUnmounted": false,
                  "m": null,
                  "next": null,
                  "parent": [Circular],
                  "props": Object {},
                  "propsDefaults": Object {},
                  "propsOptions": Array [
                    Object {},
                    Array [],
                  ],
                  "provides": Object {},
                  "proxy": Object {},
                  "refs": Object {},
                  "render": [Function],
                  "renderCache": Array [],
                  "root": [Circular],
                  "rtc": null,
                  "rtg": null,
                  "scope": EffectScope {
                    "active": true,
                    "cleanups": Array [],
                    "effects": Array [
                      ReactiveEffect {
                        "active": true,
                        "allowRecurse": true,
                        "deps": Array [
                          Set {
                            [Circular],
                          },
                        ],
                        "fn": [Function],
                        "onTrack": undefined,
                        "onTrigger": undefined,
                        "parent": undefined,
                        "scheduler": [Function],
                      },
                    ],
                  },
                  "setupContext": Object {
                    "attrs": Object {
                      "onSearch": [Function],
                    },
                    "emit": [Function],
                    "expose": [Function],
                    "slots": Object {},
                  },
                  "setupState": Object {},
                  "slots": Object {},
                  "sp": null,
                  "subTree": Object {
                    "__v_isVNode": true,
                    "__v_skip": true,
                    "anchor": null,
                    "appContext": null,
                    "children": null,
                    "component": null,
                    "dirs": null,
                    "dynamicChildren": null,
                    "dynamicProps": null,
                    "el": <search-box-stub />,
                    "key": null,
                    "patchFlag": 16,
                    "props": Object {
                      "onSearch": [Function],
                    },
                    "ref": null,
                    "scopeId": null,
                    "shapeFlag": 1,
                    "slotScopeIds": null,
                    "ssContent": null,
                    "ssFallback": null,
                    "staticCount": 0,
                    "suspense": null,
                    "target": null,
                    "targetAnchor": null,
                    "transition": null,
                    "type": "search-box-stub",
                  },
                  "suspense": null,
                  "suspenseId": 0,
                  "type": Object {
                    "name": "SearchBox",
                    "props": Object {},
                    "setup": [Function],
                  },
                  "u": null,
                  "uid": 2,
                  "um": null,
                  "update": [Function],
                  "vnode": [Circular],
                  "withProxy": null,
                },
                "dirs": null,
                "dynamicChildren": null,
                "dynamicProps": Array [
                  "onSearch",
                ],
                "el": <search-box-stub />,
                "key": null,
                "patchFlag": 8,
                "props": Object {
                  "onSearch": [Function],
                },
                "ref": null,
                "scopeId": null,
                "shapeFlag": 4,
                "slotScopeIds": null,
                "ssContent": null,
                "ssFallback": null,
                "staticCount": 0,
                "suspense": null,
                "target": null,
                "targetAnchor": null,
                "transition": null,
                "type": Object {
                  "name": "SearchBox",
                  "props": Object {},
                  "setup": [Function],
                },
              },
              Object {
                "__v_isVNode": true,
                "__v_skip": true,
                "anchor": null,
                "appContext": null,
                "children": null,
                "component": Object {
                  "a": null,
                  "accessCache": Object {},
                  "appContext": Object {
                    "app": [Circular],
                    "components": Object {
                      "transition": Object {
                        "name": "transition",
                      },
                      "transition-group": Object {
                        "name": "transition-group",
                      },
                    },
                    "config": Object {
                      "compilerOptions": Object {},
                      "errorHandler": undefined,
                      "globalProperties": Object {},
                      "isNativeTag": [Function],
                      "optionMergeStrategies": Object {},
                      "performance": false,
                      "warnHandler": undefined,
                    },
                    "directives": Object {},
                    "emitsCache": WeakMap {},
                    "mixins": Array [
                      Object {
                        "beforeCreate": [Function],
                      },
                    ],
                    "optionsCache": WeakMap {},
                    "propsCache": WeakMap {},
                    "provides": Object {},
                    "reload": [Function],
                  },
                  "asyncDep": null,
                  "asyncResolved": false,
                  "attrs": Object {},
                  "bc": null,
                  "bm": null,
                  "bu": null,
                  "bum": null,
                  "c": null,
                  "components": null,
                  "ctx": Object {
                    "users": Array [],
                  },
                  "da": null,
                  "data": Object {},
                  "directives": null,
                  "ec": null,
                  "effect": ReactiveEffect {
                    "active": true,
                    "allowRecurse": true,
                    "deps": Array [
                      Set {
                        [Circular],
                      },
                      Set {
                        [Circular],
                      },
                      Set {
                        [Circular],
                      },
                      Set {
                        [Circular],
                      },
                      Set {
                        [Circular],
                      },
                    ],
                    "fn": [Function],
                    "onTrack": undefined,
                    "onTrigger": undefined,
                    "parent": undefined,
                    "scheduler": [Function],
                  },
                  "emit": [Function],
                  "emitsOptions": null,
                  "emitted": null,
                  "exposeProxy": null,
                  "exposed": null,
                  "inheritAttrs": undefined,
                  "isDeactivated": false,
                  "isMounted": true,
                  "isUnmounted": false,
                  "m": null,
                  "next": null,
                  "parent": [Circular],
                  "props": Object {
                    "users": Array [],
                  },
                  "propsDefaults": Object {},
                  "propsOptions": Array [
                    Object {
                      "users": Object {
                        "0": false,
                        "1": true,
                        "type": [Function],
                      },
                    },
                    Array [],
                  ],
                  "provides": Object {},
                  "proxy": Object {
                    "users": Array [],
                  },
                  "refs": Object {},
                  "render": [Function],
                  "renderCache": Array [],
                  "root": [Circular],
                  "rtc": null,
                  "rtg": null,
                  "scope": EffectScope {
                    "active": true,
                    "cleanups": Array [],
                    "effects": Array [
                      ReactiveEffect {
                        "active": true,
                        "allowRecurse": true,
                        "deps": Array [
                          Set {
                            [Circular],
                          },
                          Set {
                            [Circular],
                          },
                          Set {
                            [Circular],
                          },
                          Set {
                            [Circular],
                          },
                          Set {
                            [Circular],
                          },
                        ],
                        "fn": [Function],
                        "onTrack": undefined,
                        "onTrigger": undefined,
                        "parent": undefined,
                        "scheduler": [Function],
                      },
                    ],
                  },
                  "setupContext": Object {
                    "attrs": Object {},
                    "emit": [Function],
                    "expose": [Function],
                    "slots": Object {},
                  },
                  "setupState": Object {},
                  "slots": Object {},
                  "sp": null,
                  "subTree": Object {
                    "__v_isVNode": true,
                    "__v_skip": true,
                    "anchor": null,
                    "appContext": null,
                    "children": null,
                    "component": null,
                    "dirs": null,
                    "dynamicChildren": null,
                    "dynamicProps": null,
                    "el": <users-list-stub
                      users=""
                    />,
                    "key": null,
                    "patchFlag": 0,
                    "props": Object {
                      "users": Array [],
                    },
                    "ref": null,
                    "scopeId": null,
                    "shapeFlag": 1,
                    "slotScopeIds": null,
                    "ssContent": null,
                    "ssFallback": null,
                    "staticCount": 0,
                    "suspense": null,
                    "target": null,
                    "targetAnchor": null,
                    "transition": null,
                    "type": "users-list-stub",
                  },
                  "suspense": null,
                  "suspenseId": 0,
                  "type": Object {
                    "name": "UsersList",
                    "props": Object {
                      "users": [Function],
                    },
                    "setup": [Function],
                  },
                  "u": null,
                  "uid": 3,
                  "um": null,
                  "update": [Function],
                  "vnode": [Circular],
                  "withProxy": null,
                },
                "dirs": null,
                "dynamicChildren": null,
                "dynamicProps": Array [
                  "users",
                ],
                "el": <users-list-stub
                  users=""
                />,
                "key": null,
                "patchFlag": 8,
                "props": Object {
                  "users": Array [],
                },
                "ref": null,
                "scopeId": null,
                "shapeFlag": 4,
                "slotScopeIds": null,
                "ssContent": null,
                "ssFallback": null,
                "staticCount": 0,
                "suspense": null,
                "target": null,
                "targetAnchor": null,
                "transition": null,
                "type": Object {
                  "name": "UsersList",
                  "props": Object {
                    "users": [Function],
                  },
                  "setup": [Function],
                },
              },
              Object {
                "__v_isVNode": true,
                "__v_skip": true,
                "anchor": null,
                "appContext": null,
                "children": "v-if",
                "component": null,
                "dirs": null,
                "dynamicChildren": Array [],
                "dynamicProps": null,
                "el": <!--v-if-->,
                "key": null,
                "patchFlag": 0,
                "props": null,
                "ref": null,
                "scopeId": null,
                "shapeFlag": 8,
                "slotScopeIds": null,
                "ssContent": null,
                "ssFallback": null,
                "staticCount": 0,
                "suspense": null,
                "target": null,
                "targetAnchor": null,
                "transition": null,
                "type": Symbol(Comment),
              },
            ],
            "component": null,
            "dirs": null,
            "dynamicChildren": Array [
              Object {
                "__v_isVNode": true,
                "__v_skip": true,
                "anchor": null,
                "appContext": null,
                "children": null,
                "component": Object {
                  "a": null,
                  "accessCache": Object {
                    "@@__IMMUTABLE_ITERABLE__@@": 0,
                    "@@__IMMUTABLE_RECORD__@@": 0,
                    "_isMockFunction": 0,
                    "constructor": 0,
                    "isVueInstance": 0,
                    "toJSON": 0,
                    Symbol(Symbol.toStringTag): 0,
                  },
                  "appContext": Object {
                    "app": [Circular],
                    "components": Object {
                      "transition": Object {
                        "name": "transition",
                      },
                      "transition-group": Object {
                        "name": "transition-group",
                      },
                    },
                    "config": Object {
                      "compilerOptions": Object {},
                      "errorHandler": undefined,
                      "globalProperties": Object {},
                      "isNativeTag": [Function],
                      "optionMergeStrategies": Object {},
                      "performance": false,
                      "warnHandler": undefined,
                    },
                    "directives": Object {},
                    "emitsCache": WeakMap {},
                    "mixins": Array [
                      Object {
                        "beforeCreate": [Function],
                      },
                    ],
                    "optionsCache": WeakMap {},
                    "propsCache": WeakMap {},
                    "provides": Object {},
                    "reload": [Function],
                  },
                  "asyncDep": null,
                  "asyncResolved": false,
                  "attrs": Object {
                    "onSearch": [Function],
                  },
                  "bc": null,
                  "bm": null,
                  "bu": null,
                  "bum": null,
                  "c": null,
                  "components": null,
                  "ctx": Object {},
                  "da": null,
                  "data": Object {},
                  "directives": null,
                  "ec": null,
                  "effect": ReactiveEffect {
                    "active": true,
                    "allowRecurse": true,
                    "deps": Array [
                      Set {
                        [Circular],
                      },
                    ],
                    "fn": [Function],
                    "onTrack": undefined,
                    "onTrigger": undefined,
                    "parent": undefined,
                    "scheduler": [Function],
                  },
                  "emit": [Function],
                  "emitsOptions": null,
                  "emitted": null,
                  "exposeProxy": null,
                  "exposed": null,
                  "inheritAttrs": undefined,
                  "isDeactivated": false,
                  "isMounted": true,
                  "isUnmounted": false,
                  "m": null,
                  "next": null,
                  "parent": [Circular],
                  "props": Object {},
                  "propsDefaults": Object {},
                  "propsOptions": Array [
                    Object {},
                    Array [],
                  ],
                  "provides": Object {},
                  "proxy": Object {},
                  "refs": Object {},
                  "render": [Function],
                  "renderCache": Array [],
                  "root": [Circular],
                  "rtc": null,
                  "rtg": null,
                  "scope": EffectScope {
                    "active": true,
                    "cleanups": Array [],
                    "effects": Array [
                      ReactiveEffect {
                        "active": true,
                        "allowRecurse": true,
                        "deps": Array [
                          Set {
                            [Circular],
                          },
                        ],
                        "fn": [Function],
                        "onTrack": undefined,
                        "onTrigger": undefined,
                        "parent": undefined,
                        "scheduler": [Function],
                      },
                    ],
                  },
                  "setupContext": Object {
                    "attrs": Object {
                      "onSearch": [Function],
                    },
                    "emit": [Function],
                    "expose": [Function],
                    "slots": Object {},
                  },
                  "setupState": Object {},
                  "slots": Object {},
                  "sp": null,
                  "subTree": Object {
                    "__v_isVNode": true,
                    "__v_skip": true,
                    "anchor": null,
                    "appContext": null,
                    "children": null,
                    "component": null,
                    "dirs": null,
                    "dynamicChildren": null,
                    "dynamicProps": null,
                    "el": <search-box-stub />,
                    "key": null,
                    "patchFlag": 16,
                    "props": Object {
                      "onSearch": [Function],
                    },
                    "ref": null,
                    "scopeId": null,
                    "shapeFlag": 1,
                    "slotScopeIds": null,
                    "ssContent": null,
                    "ssFallback": null,
                    "staticCount": 0,
                    "suspense": null,
                    "target": null,
                    "targetAnchor": null,
                    "transition": null,
                    "type": "search-box-stub",
                  },
                  "suspense": null,
                  "suspenseId": 0,
                  "type": Object {
                    "name": "SearchBox",
                    "props": Object {},
                    "setup": [Function],
                  },
                  "u": null,
                  "uid": 2,
                  "um": null,
                  "update": [Function],
                  "vnode": [Circular],
                  "withProxy": null,
                },
                "dirs": null,
                "dynamicChildren": null,
                "dynamicProps": Array [
                  "onSearch",
                ],
                "el": <search-box-stub />,
                "key": null,
                "patchFlag": 8,
                "props": Object {
                  "onSearch": [Function],
                },
                "ref": null,
                "scopeId": null,
                "shapeFlag": 4,
                "slotScopeIds": null,
                "ssContent": null,
                "ssFallback": null,
                "staticCount": 0,
                "suspense": null,
                "target": null,
                "targetAnchor": null,
                "transition": null,
                "type": Object {
                  "name": "SearchBox",
                  "props": Object {},
                  "setup": [Function],
                },
              },
              Object {
                "__v_isVNode": true,
                "__v_skip": true,
                "anchor": null,
                "appContext": null,
                "children": null,
                "component": Object {
                  "a": null,
                  "accessCache": Object {
                    "@@__IMMUTABLE_ITERABLE__@@": 0,
                    "@@__IMMUTABLE_RECORD__@@": 0,
                    "_isMockFunction": 0,
                    "constructor": 0,
                    "isVueInstance": 0,
                    "toJSON": 0,
                    "users": 3,
                    Symbol(Symbol.toStringTag): 0,
                  },
                  "appContext": Object {
                    "app": [Circular],
                    "components": Object {
                      "transition": Object {
                        "name": "transition",
                      },
                      "transition-group": Object {
                        "name": "transition-group",
                      },
                    },
                    "config": Object {
                      "compilerOptions": Object {},
                      "errorHandler": undefined,
                      "globalProperties": Object {},
                      "isNativeTag": [Function],
                      "optionMergeStrategies": Object {},
                      "performance": false,
                      "warnHandler": undefined,
                    },
                    "directives": Object {},
                    "emitsCache": WeakMap {},
                    "mixins": Array [
                      Object {
                        "beforeCreate": [Function],
                      },
                    ],
                    "optionsCache": WeakMap {},
                    "propsCache": WeakMap {},
                    "provides": Object {},
                    "reload": [Function],
                  },
                  "asyncDep": null,
                  "asyncResolved": false,
                  "attrs": Object {},
                  "bc": null,
                  "bm": null,
                  "bu": null,
                  "bum": null,
                  "c": null,
                  "components": null,
                  "ctx": Object {
                    "users": Array [],
                  },
                  "da": null,
                  "data": Object {},
                  "directives": null,
                  "ec": null,
                  "effect": ReactiveEffect {
                    "active": true,
                    "allowRecurse": true,
                    "deps": Array [
                      Set {
                        [Circular],
                      },
                      Set {
                        [Circular],
                      },
                      Set {
                        [Circular],
                      },
                      Set {
                        [Circular],
                      },
                      Set {
                        [Circular],
                      },
                    ],
                    "fn": [Function],
                    "onTrack": undefined,
                    "onTrigger": undefined,
                    "parent": undefined,
                    "scheduler": [Function],
                  },
                  "emit": [Function],
                  "emitsOptions": null,
                  "emitted": null,
                  "exposeProxy": null,
                  "exposed": null,
                  "inheritAttrs": undefined,
                  "isDeactivated": false,
                  "isMounted": true,
                  "isUnmounted": false,
                  "m": null,
                  "next": null,
                  "parent": [Circular],
                  "props": Object {
                    "users": Array [],
                  },
                  "propsDefaults": Object {},
                  "propsOptions": Array [
                    Object {
                      "users": Object {
                        "0": false,
                        "1": true,
                        "type": [Function],
                      },
                    },
                    Array [],
                  ],
                  "provides": Object {},
                  "proxy": Object {
                    "users": Array [],
                  },
                  "refs": Object {},
                  "render": [Function],
                  "renderCache": Array [],
                  "root": [Circular],
                  "rtc": null,
                  "rtg": null,
                  "scope": EffectScope {
                    "active": true,
                    "cleanups": Array [],
                    "effects": Array [
                      ReactiveEffect {
                        "active": true,
                        "allowRecurse": true,
                        "deps": Array [
                          Set {
                            [Circular],
                          },
                          Set {
                            [Circular],
                          },
                          Set {
                            [Circular],
                          },
                          Set {
                            [Circular],
                          },
                          Set {
                            [Circular],
                          },
                        ],
                        "fn": [Function],
                        "onTrack": undefined,
                        "onTrigger": undefined,
                        "parent": undefined,
                        "scheduler": [Function],
                      },
                    ],
                  },
                  "setupContext": Object {
                    "attrs": Object {},
                    "emit": [Function],
                    "expose": [Function],
                    "slots": Object {},
                  },
                  "setupState": Object {},
                  "slots": Object {},
                  "sp": null,
                  "subTree": Object {
                    "__v_isVNode": true,
                    "__v_skip": true,
                    "anchor": null,
                    "appContext": null,
                    "children": null,
                    "component": null,
                    "dirs": null,
                    "dynamicChildren": null,
                    "dynamicProps": null,
                    "el": <users-list-stub
                      users=""
                    />,
                    "key": null,
                    "patchFlag": 0,
                    "props": Object {
                      "users": Array [],
                    },
                    "ref": null,
                    "scopeId": null,
                    "shapeFlag": 1,
                    "slotScopeIds": null,
                    "ssContent": null,
                    "ssFallback": null,
                    "staticCount": 0,
                    "suspense": null,
                    "target": null,
                    "targetAnchor": null,
                    "transition": null,
                    "type": "users-list-stub",
                  },
                  "suspense": null,
                  "suspenseId": 0,
                  "type": Object {
                    "name": "UsersList",
                    "props": Object {
                      "users": [Function],
                    },
                    "setup": [Function],
                  },
                  "u": null,
                  "uid": 3,
                  "um": null,
                  "update": [Function],
                  "vnode": [Circular],
                  "withProxy": null,
                },
                "dirs": null,
                "dynamicChildren": null,
                "dynamicProps": Array [
                  "users",
                ],
                "el": <users-list-stub
                  users=""
                />,
                "key": null,
                "patchFlag": 8,
                "props": Object {
                  "users": Array [],
                },
                "ref": null,
                "scopeId": null,
                "shapeFlag": 4,
                "slotScopeIds": null,
                "ssContent": null,
                "ssFallback": null,
                "staticCount": 0,
                "suspense": null,
                "target": null,
                "targetAnchor": null,
                "transition": null,
                "type": Object {
                  "name": "UsersList",
                  "props": Object {
                    "users": [Function],
                  },
                  "setup": [Function],
                },
              },
              Object {
                "__v_isVNode": true,
                "__v_skip": true,
                "anchor": null,
                "appContext": null,
                "children": "v-if",
                "component": null,
                "dirs": null,
                "dynamicChildren": Array [],
                "dynamicProps": null,
                "el": <!--v-if-->,
                "key": null,
                "patchFlag": 0,
                "props": null,
                "ref": null,
                "scopeId": null,
                "shapeFlag": 8,
                "slotScopeIds": null,
                "ssContent": null,
                "ssFallback": null,
                "staticCount": 0,
                "suspense": null,
                "target": null,
                "targetAnchor": null,
                "transition": null,
                "type": Symbol(Comment),
              },
            ],
            "dynamicProps": null,
            "el": ,
            "key": null,
            "patchFlag": 64,
            "props": null,
            "ref": null,
            "scopeId": null,
            "shapeFlag": 16,
            "slotScopeIds": null,
            "ssContent": null,
            "ssFallback": null,
            "staticCount": 0,
            "suspense": null,
            "target": null,
            "targetAnchor": null,
            "transition": null,
            "type": Symbol(Fragment),
          },
          "suspense": null,
          "suspenseId": 0,
          "type": Object {
            "components": Object {
              "SearchBox": Object {
                "data": [Function],
                "methods": Object {
                  "search": [Function],
                },
                "name": "SearchBox",
                "render": [Function],
              },
              "UsersList": Object {
                "components": Object {
                  "UserInfo": Object {
                    "name": "UserInfo",
                    "props": Object {
                      "user": [Function],
                    },
                    "render": [Function],
                  },
                },
                "name": "UsersList",
                "props": Object {
                  "users": [Function],
                },
                "render": [Function],
              },
            },
            "data": [Function],
            "methods": Object {
              "fetchNextUser": [Function],
              "fetchUsers": [Function],
              "search": [Function],
            },
            "mounted": [Function],
            "name": "App",
            "render": [Function],
          },
          "u": null,
          "uid": 1,
          "um": null,
          "update": [Function],
          "vnode": [Circular],
          "withProxy": null,
        },
        "dirs": null,
        "dynamicChildren": null,
        "dynamicProps": null,
        "el": ,
        "key": null,
        "patchFlag": 0,
        "props": Object {
          "ref": "VTU_COMPONENT",
        },
        "ref": Object {
          "f": false,
          "i": [Circular],
          "k": undefined,
          "r": "VTU_COMPONENT",
        },
        "scopeId": null,
        "shapeFlag": 4,
        "slotScopeIds": null,
        "ssContent": null,
        "ssFallback": null,
        "staticCount": 0,
        "suspense": null,
        "target": null,
        "targetAnchor": null,
        "transition": null,
        "type": Object {
          "components": Object {
            "SearchBox": Object {
              "data": [Function],
              "methods": Object {
                "search": [Function],
              },
              "name": "SearchBox",
              "render": [Function],
            },
            "UsersList": Object {
              "components": Object {
                "UserInfo": Object {
                  "name": "UserInfo",
                  "props": Object {
                    "user": [Function],
                  },
                  "render": [Function],
                },
              },
              "name": "UsersList",
              "props": Object {
                "users": [Function],
              },
              "render": [Function],
            },
          },
          "data": [Function],
          "methods": Object {
            "fetchNextUser": [Function],
            "fetchUsers": [Function],
            "search": [Function],
          },
          "mounted": [Function],
          "name": "App",
          "render": [Function],
        },
      },
      "suspense": null,
      "suspenseId": 0,
      "type": Object {
        "name": "VTU_ROOT",
        "render": [Function],
      },
      "u": null,
      "uid": 0,
      "um": null,
      "update": [Function],
      "vnode": Object {
        "__v_isVNode": true,
        "__v_skip": true,
        "anchor": null,
        "appContext": Object {
          "app": [Circular],
          "components": Object {
            "transition": Object {
              "name": "transition",
            },
            "transition-group": Object {
              "name": "transition-group",
            },
          },
          "config": Object {
            "compilerOptions": Object {},
            "errorHandler": undefined,
            "globalProperties": Object {},
            "isNativeTag": [Function],
            "optionMergeStrategies": Object {},
            "performance": false,
            "warnHandler": undefined,
          },
          "directives": Object {},
          "emitsCache": WeakMap {},
          "mixins": Array [
            Object {
              "beforeCreate": [Function],
            },
          ],
          "optionsCache": WeakMap {},
          "propsCache": WeakMap {},
          "provides": Object {},
          "reload": [Function],
        },
        "children": null,
        "component": [Circular],
        "dirs": null,
        "dynamicChildren": null,
        "dynamicProps": null,
        "el": ,
        "key": null,
        "patchFlag": 0,
        "props": null,
        "ref": null,
        "scopeId": null,
        "shapeFlag": 4,
        "slotScopeIds": null,
        "ssContent": null,
        "ssFallback": null,
        "staticCount": 0,
        "suspense": null,
        "target": null,
        "targetAnchor": null,
        "transition": null,
        "type": Object {
          "name": "VTU_ROOT",
          "render": [Function],
        },
      },
      "withProxy": null,
    },
    "_props": null,
    "_uid": 0,
    "component": [Function],
    "config": Object {
      "compilerOptions": Object {},
      "errorHandler": undefined,
      "globalProperties": Object {},
      "isNativeTag": [Function],
      "optionMergeStrategies": Object {},
      "performance": false,
      "warnHandler": undefined,
    },
    "directive": [Function],
    "mixin": [Function],
    "mount": [Function],
    "provide": [Function],
    "unmount": [Function],
    "use": [Function],
    "version": "3.2.33",
  },
  "__setProps": [Function],
  "componentVM": Object {
    "apollo": Object {
      "client": ApolloClient {
        "__actionHookForDevTools": [MockFunction undefined],
        "__requestRaw": [MockFunction undefined],
        "addResolvers": [MockFunction undefined],
        "clearStore": [MockFunction undefined],
        "constructor": [MockFunction undefined],
        "extract": [MockFunction undefined],
        "getObservableQueries": [MockFunction undefined],
        "getResolvers": [MockFunction undefined],
        "mutate": [MockFunction undefined],
        "onClearStore": [MockFunction undefined],
        "onResetStore": [MockFunction undefined],
        "query": [MockFunction undefined],
        "reFetchObservableQueries": [MockFunction undefined],
        "readFragment": [MockFunction undefined],
        "readQuery": [MockFunction undefined],
        "refetchQueries": [MockFunction undefined],
        "resetStore": [MockFunction undefined],
        "restore": [MockFunction undefined],
        "setLink": [MockFunction undefined],
        "setLocalStateFragmentMatcher": [MockFunction undefined],
        "setResolvers": [MockFunction undefined],
        "stop": [MockFunction undefined],
        "subscribe": [MockFunction undefined],
        "watchQuery": [MockFunction undefined],
        "writeFragment": [MockFunction undefined],
        "writeQuery": [MockFunction undefined],
      },
      "limit": 5,
      "startPage": 0,
      "usersQuery": Object {
        "definitions": Array [
          Object {
            "directives": Array [],
            "kind": "OperationDefinition",
            "name": Object {
              "kind": "Name",
              "value": "Users",
            },
            "operation": "query",
            "selectionSet": Object {
              "kind": "SelectionSet",
              "selections": Array [
                Object {
                  "alias": undefined,
                  "arguments": Array [
                    Object {
                      "kind": "Argument",
                      "name": Object {
                        "kind": "Name",
                        "value": "options",
                      },
                      "value": Object {
                        "fields": Array [
                          Object {
                            "kind": "ObjectField",
                            "name": Object {
                              "kind": "Name",
                              "value": "search",
                            },
                            "value": Object {
                              "fields": Array [
                                Object {
                                  "kind": "ObjectField",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "q",
                                  },
                                  "value": Object {
                                    "kind": "Variable",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "q",
                                    },
                                  },
                                },
                              ],
                              "kind": "ObjectValue",
                            },
                          },
                          Object {
                            "kind": "ObjectField",
                            "name": Object {
                              "kind": "Name",
                              "value": "slice",
                            },
                            "value": Object {
                              "fields": Array [
                                Object {
                                  "kind": "ObjectField",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "start",
                                  },
                                  "value": Object {
                                    "kind": "Variable",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "page",
                                    },
                                  },
                                },
                                Object {
                                  "kind": "ObjectField",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "limit",
                                  },
                                  "value": Object {
                                    "kind": "Variable",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "limit",
                                    },
                                  },
                                },
                              ],
                              "kind": "ObjectValue",
                            },
                          },
                        ],
                        "kind": "ObjectValue",
                      },
                    },
                  ],
                  "directives": Array [],
                  "kind": "Field",
                  "name": Object {
                    "kind": "Name",
                    "value": "users",
                  },
                  "selectionSet": Object {
                    "kind": "SelectionSet",
                    "selections": Array [
                      Object {
                        "alias": undefined,
                        "arguments": Array [],
                        "directives": Array [],
                        "kind": "Field",
                        "name": Object {
                          "kind": "Name",
                          "value": "data",
                        },
                        "selectionSet": Object {
                          "kind": "SelectionSet",
                          "selections": Array [
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "id",
                              },
                              "selectionSet": undefined,
                            },
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "name",
                              },
                              "selectionSet": undefined,
                            },
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "email",
                              },
                              "selectionSet": undefined,
                            },
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "phone",
                              },
                              "selectionSet": undefined,
                            },
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "company",
                              },
                              "selectionSet": Object {
                                "kind": "SelectionSet",
                                "selections": Array [
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "name",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "catchPhrase",
                                    },
                                    "selectionSet": undefined,
                                  },
                                ],
                              },
                            },
                          ],
                        },
                      },
                      Object {
                        "alias": undefined,
                        "arguments": Array [],
                        "directives": Array [],
                        "kind": "Field",
                        "name": Object {
                          "kind": "Name",
                          "value": "meta",
                        },
                        "selectionSet": Object {
                          "kind": "SelectionSet",
                          "selections": Array [
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "totalCount",
                              },
                              "selectionSet": undefined,
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              ],
            },
            "variableDefinitions": Array [
              Object {
                "defaultValue": undefined,
                "directives": Array [],
                "kind": "VariableDefinition",
                "type": Object {
                  "kind": "NamedType",
                  "name": Object {
                    "kind": "Name",
                    "value": "String",
                  },
                },
                "variable": Object {
                  "kind": "Variable",
                  "name": Object {
                    "kind": "Name",
                    "value": "q",
                  },
                },
              },
              Object {
                "defaultValue": undefined,
                "directives": Array [],
                "kind": "VariableDefinition",
                "type": Object {
                  "kind": "NamedType",
                  "name": Object {
                    "kind": "Name",
                    "value": "Int",
                  },
                },
                "variable": Object {
                  "kind": "Variable",
                  "name": Object {
                    "kind": "Name",
                    "value": "page",
                  },
                },
              },
              Object {
                "defaultValue": undefined,
                "directives": Array [],
                "kind": "VariableDefinition",
                "type": Object {
                  "kind": "NamedType",
                  "name": Object {
                    "kind": "Name",
                    "value": "Int",
                  },
                },
                "variable": Object {
                  "kind": "Variable",
                  "name": Object {
                    "kind": "Name",
                    "value": "limit",
                  },
                },
              },
            ],
          },
        ],
        "kind": "Document",
        "loc": Object {
          "end": 327,
          "start": 0,
        },
      },
    },
    "fetchNextUser": [Function],
    "fetchUsers": [Function],
    "hasOwnProperty": [Function],
    "isLoading": false,
    "search": [Function],
    "textToSearch": "",
    "users": Array [],
  },
  "isDisabled": [Function],
  "rootVM": Object {},
  "wrapperElement": ,
}
`;
